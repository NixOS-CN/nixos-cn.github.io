import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o,c as p,a as s,b as n,d as e,e as l}from"./app-Ad_0HBJZ.js";const c={},r=l(`<h1 id="nixos-的网络问题" tabindex="-1"><a class="header-anchor" href="#nixos-的网络问题"><span>NixOS 的网络问题</span></a></h1><p>国内用户在使用 NixOS 时会存在一些网络问题，一是 NixOS 高度依赖 GitHub 作为 channel/flake 数据源——在国内访问 GitHub 相当的慢，二是 NixOS 官方的包缓存服务器在国内访问速度较慢。</p><p>为了解决这些问题，你可以使用国内的镜像源，或者使用代理工具来加速访问。</p><p>这里我先介绍几个比较简单的配置方法。</p><h2 id="_1-使用国内的-nix-包缓存服务器" tabindex="-1"><a class="header-anchor" href="#_1-使用国内的-nix-包缓存服务器"><span>1. 使用国内的 Nix 包缓存服务器</span></a></h2><p>首先，在执行后面给出的任何 <code>nix</code> 相关命令时，你都可以通过 <code>--option</code> 选项来指定镜像源，例如：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 使用上海交通大学的镜像源</span>
<span class="token comment"># 官方文档: https://mirror.sjtu.edu.cn/docs/nix-channels/store</span>
nixos-rebuild switch <span class="token parameter variable">--option</span> substituters <span class="token string">&quot;https://mirror.sjtu.edu.cn/nix-channels/store&quot;</span>

<span class="token comment"># 使用中国科学技术大学的镜像源</span>
<span class="token comment"># 官方文档: https://mirrors.ustc.edu.cn/help/nix-channels.html</span>
nixos-rebuild switch <span class="token parameter variable">--option</span> substituters <span class="token string">&quot;https://mirrors.ustc.edu.cn/nix-channels/store&quot;</span>

<span class="token comment"># 使用清华大学的镜像源</span>
<span class="token comment"># 官方文档: https://mirrors.tuna.tsinghua.edu.cn/help/nix-channels/</span>
nixos-rebuild switch <span class="token parameter variable">--option</span> substituters <span class="token string">&quot;https://mirrors.tuna.tsinghua.edu.cn/nix-channels/store&quot;</span>

<span class="token comment"># 其他 nix 命令同样可以使用 --option 选项，例如 nix shell</span>
nix shell nixpkgs<span class="token comment">#cowsay --option substituters &quot;https://mirrors.tuna.tsinghua.edu.cn/nix-channels/store&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以自己测试下上述几个镜像源的速度，选速度最快的一个。</p><h2 id="_2-使用国内镜像地址加速-flakes-inputs-的下载" tabindex="-1"><a class="header-anchor" href="#_2-使用国内镜像地址加速-flakes-inputs-的下载"><span>2. 使用国内镜像地址加速 Flakes Inputs 的下载</span></a></h2><p>如果你想使用 Flakes，但访问 GitHub 速度太慢，你可以使用国内的镜像地址来加速。</p><p>但需要注意的是，这种方式下无法锁定 nixpkgs 版本，也就失去了 Flakes 锁定依赖版本的优势。</p><p>示例如下，主要是将 <code>nixpkgs.url</code> 替换成国内镜像源的 <code>nixexprs.tar.xz</code> 文件的路径：</p><div class="language-nix line-numbers-mode" data-ext="nix" data-title="nix"><pre class="language-nix"><code><span class="token punctuation">{</span>
  inputs <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment"># nixpkgs.url = &quot;github:NixOS/nixpkgs/nixos-23.11&quot;;</span>
    nixpkgs<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token string">&quot;https://mirrors.ustc.edu.cn/nix-channels/nixos-23.11/nixexprs.tar.xz&quot;</span><span class="token punctuation">;</span>
    <span class="token comment"># nixpkgs.url = &quot;https://mirrors.tuna.tsinghua.edu.cn/nix-channels/nixpkgs-23.11/nixexprs.tar.xz&quot;;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  outputs <span class="token operator">=</span> inputs<span class="token operator">@</span><span class="token punctuation">{</span> self<span class="token punctuation">,</span> nixpkgs<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
    nixosConfigurations<span class="token punctuation">.</span>my<span class="token operator">-</span>nixos <span class="token operator">=</span> nixpkgs<span class="token punctuation">.</span>lib<span class="token punctuation">.</span>nixosSystem <span class="token punctuation">{</span>
      system <span class="token operator">=</span> <span class="token string">&quot;x86_64-linux&quot;</span><span class="token punctuation">;</span>
      modules <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token url">./configuration.nix</span>
      <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-使用代理工具加速访问-channels-跟-flake-inputs" tabindex="-1"><a class="header-anchor" href="#_3-使用代理工具加速访问-channels-跟-flake-inputs"><span>3. 使用代理工具加速访问 Channels 跟 Flake Inputs</span></a></h2><p>对于 Flake Inputs 跟 Channels 的加速访问，这个就需要使用代理工具加速访问。</p><p>优先推荐使用旁路网关（软路由）或者 TUN 方式的全局网络加速方案，这是最省心的方式。</p><p>如果你只有 HTTP 代理，可以通过如下命令设置代理环境变量，实现使用 socks5/http 代理加速 nix 的网络访问：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> /run/systemd/system/nix-daemon.service.d/
<span class="token function">cat</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOF<span class="token bash punctuation"> <span class="token operator">&gt;</span>/run/systemd/system/nix-daemon.service.d/override.conf</span>
[Service]
Environment=&quot;https_proxy=socks5h://localhost:7891&quot;
EOF</span>
<span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl restart nix-daemon
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>但请注意，系统重启后 <code>/run/</code> 目录下的内容会被清空，所以每次重启后都需要重新执行上述命令</strong>！</p><p>如果你希望永久设置代理，建议将上述命令保存为 shell 脚本，在每次启动系统时运行一下。或者也可以使用旁路网关或 TUN 等全局代理方案。</p>`,20),u={href:"https://nixos-and-flakes.thiscute.world/zh/nixos-with-flakes/add-custom-cache-servers",target:"_blank",rel:"noopener noreferrer"},d={class:"hint-container warning"},m=s("p",{class:"hint-container-title"},"GitHub 报 HTTP 403 错误",-1),h={href:"https://github.com/ryan4yin/nixos-and-flakes-book/issues/74",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/NixOS/nix/issues/6536",target:"_blank",rel:"noopener noreferrer"};function x(v,b){const a=i("ExternalLinkIcon");return o(),p("div",null,[r,s("p",null,[n("更详细的说明与其他用法介绍，请移步"),s("a",u,[n("添加自定义缓存服务器"),e(a)]),n("，注意这部分内容可能需要一定的 NixOS 使用经验才能理解。")]),s("div",d,[m,s("p",null,[n("注意：使用一些商用代理或公共代理时你可能会遇到 GitHub 下载时报 HTTP 403 错误（"),s("a",h,[n("nixos-and-flakes-book/issues/74"),e(a)]),n("），可尝试通过更换代理服务器或者设置 "),s("a",k,[n("access-tokens"),e(a)]),n(" 来解决。")])])])}const f=t(c,[["render",x],["__file","Networking.html.vue"]]),N=JSON.parse('{"path":"/tutorials/installation/Networking.html","title":"NixOS 的网络问题","lang":"zh-CN","frontmatter":{"description":"NixOS 的网络问题 国内用户在使用 NixOS 时会存在一些网络问题，一是 NixOS 高度依赖 GitHub 作为 channel/flake 数据源——在国内访问 GitHub 相当的慢，二是 NixOS 官方的包缓存服务器在国内访问速度较慢。 为了解决这些问题，你可以使用国内的镜像源，或者使用代理工具来加速访问。 这里我先介绍几个比较简单的配...","head":[["meta",{"property":"og:url","content":"https://nixos-cn.github.io/tutorials/installation/Networking.html"}],["meta",{"property":"og:site_name","content":"NixOS 中文"}],["meta",{"property":"og:title","content":"NixOS 的网络问题"}],["meta",{"property":"og:description","content":"NixOS 的网络问题 国内用户在使用 NixOS 时会存在一些网络问题，一是 NixOS 高度依赖 GitHub 作为 channel/flake 数据源——在国内访问 GitHub 相当的慢，二是 NixOS 官方的包缓存服务器在国内访问速度较慢。 为了解决这些问题，你可以使用国内的镜像源，或者使用代理工具来加速访问。 这里我先介绍几个比较简单的配..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-05T13:58:51.000Z"}],["meta",{"property":"article:author","content":"NixOS-CN"}],["meta",{"property":"article:modified_time","content":"2024-07-05T13:58:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"NixOS 的网络问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-05T13:58:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"NixOS-CN\\",\\"url\\":\\"https://github.com/nixos-cn\\"}]}"]]},"headers":[{"level":2,"title":"1. 使用国内的 Nix 包缓存服务器","slug":"_1-使用国内的-nix-包缓存服务器","link":"#_1-使用国内的-nix-包缓存服务器","children":[]},{"level":2,"title":"2. 使用国内镜像地址加速 Flakes Inputs 的下载","slug":"_2-使用国内镜像地址加速-flakes-inputs-的下载","link":"#_2-使用国内镜像地址加速-flakes-inputs-的下载","children":[]},{"level":2,"title":"3. 使用代理工具加速访问 Channels 跟 Flake Inputs","slug":"_3-使用代理工具加速访问-channels-跟-flake-inputs","link":"#_3-使用代理工具加速访问-channels-跟-flake-inputs","children":[]}],"git":{"createdTime":1711467352000,"updatedTime":1720187931000,"contributors":[{"name":"Ryan Yin","email":"xiaoyin_c@qq.com","commits":4},{"name":"Tatooi Noyo","email":"tatooi.noyo@outlook.com","commits":2}]},"readingTime":{"minutes":2.67,"words":800},"filePathRelative":"tutorials/installation/Networking.md","localizedDate":"2024年3月26日","autoDesc":true,"excerpt":"\\n<p>国内用户在使用 NixOS 时会存在一些网络问题，一是 NixOS 高度依赖 GitHub 作为\\nchannel/flake 数据源——在国内访问 GitHub 相当的慢，二是 NixOS 官方的包缓存服务器在国内访问速度较慢。</p>\\n<p>为了解决这些问题，你可以使用国内的镜像源，或者使用代理工具来加速访问。</p>\\n<p>这里我先介绍几个比较简单的配置方法。</p>\\n<h2>1. 使用国内的 Nix 包缓存服务器</h2>\\n<p>首先，在执行后面给出的任何 <code>nix</code> 相关命令时，你都可以通过 <code>--option</code> 选项来指定镜像源，例如：</p>"}');export{f as comp,N as data};
