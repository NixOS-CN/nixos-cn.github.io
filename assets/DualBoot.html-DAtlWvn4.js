import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,a as o,b as n,e as p,d as s,w as t,r as d,o as m}from"./app-Dg3N_ADG.js";const v="/images/GreenHand/TurnOffWindowsFastboot.webp",k="/images/GreenHand/WindowsDiskManager.webp",b="/images/GreenHand/DisableSecureBoot.webp",h="/images/GreenHand/FirstBoot.webp",g="/images/GreenHand/TrulyMeet.webp",f={},x={href:"https://www.ventoy.net/cn/download.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://nixos.org/download.html#nix-more:~:text=without%20a%20desktop.-,Minimal%20ISO%20image,-The%20minimal%20installation",target:"_blank",rel:"noopener noreferrer"},q={href:"https://nixos.wiki/wiki/Nix_channels",target:"_blank",rel:"noopener noreferrer"};function y(S,a){const l=d("ExternalLinkIcon"),c=d("CodeTabs");return m(),u("div",null,[a[15]||(a[15]=o('<h1 id="双系统安装" tabindex="-1"><a class="header-anchor" href="#双系统安装"><span>双系统安装</span></a></h1><h2 id="windows-系统上的准备" tabindex="-1"><a class="header-anchor" href="#windows-系统上的准备"><span>Windows 系统上的准备</span></a></h2><p>本章将介绍如何在已经安装了 Windows 系统的物理机上再安装 NixOS 。</p><h3 id="关闭快速启动" tabindex="-1"><a class="header-anchor" href="#关闭快速启动"><span>关闭快速启动</span></a></h3><p>若不关闭 Windows 的快速启动，可能会导致 NixOS 掉网卡。点击 “更改当前不可用配置” 以后会出现一个 UAC 窗口，点击允许以后，再取消 “启用快速启动（推荐）” 复选框。</p><figure><img src="'+v+`" alt="关闭快速启动" tabindex="0" loading="lazy"><figcaption>关闭快速启动</figcaption></figure><h3 id="调整时间设置" tabindex="-1"><a class="header-anchor" href="#调整时间设置"><span>调整时间设置</span></a></h3><p>由于 Windows 与 Linux 时间标准不同，从 Linux 切换回 Windows 会导致系统时间变更的问题。</p><p>在这里我们提供修改 Windows 设置，以让两种系统时间保持一致的的方法。</p><p>PowerShell 管理员权限运行：</p><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><pre class="language-powershell"><code>Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation <span class="token operator">/</span>v RealTimeIsUniversal <span class="token operator">/</span>t REG_DWORD <span class="token operator">/</span>d 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令向注册表添加了字段，下次重启生效。</p><h3 id="腾出空间" tabindex="-1"><a class="header-anchor" href="#腾出空间"><span>腾出空间</span></a></h3><p>我们需要为 NixOS 的安装准备一些空间，我们推荐为 NixOS 保留的分区不少于 64GB。</p><p>你可以使用 Windows 自带的磁盘管理或 DiskGenius 等其他分区软件腾出这些空间。</p><figure><img src="`+k+'" alt="Windows 磁盘管理" tabindex="0" loading="lazy"><figcaption>Windows 磁盘管理</figcaption></figure><h3 id="制作引导媒介" tabindex="-1"><a class="header-anchor" href="#制作引导媒介"><span>制作引导媒介</span></a></h3>',17)),n("p",null,[a[1]||(a[1]=s("我们使用 ")),n("a",x,[a[0]||(a[0]=s("Ventoy")),p(l)]),a[2]||(a[2]=s(" 制作引导媒介，Ventoy 会将引导写入媒介（驱动器），然后你可以间接选择引导你媒介中的镜像。这样的好处是刻录一次就能引导多镜像（具体请参阅 Ventoy 官网以获取使用方法）。"))]),n("p",null,[a[4]||(a[4]=s("下载")),n("a",w,[a[3]||(a[3]=s("最简镜像")),p(l)]),a[5]||(a[5]=s("（Minimal ISO image），我们不使用官方安装程序做演示，因为没有太多的自定义选项。下载完成后，拷贝镜像至已经安装 Ventoy 的驱动器的任意目录。"))]),a[16]||(a[16]=o('<h2 id="调整-bios-设置" tabindex="-1"><a class="header-anchor" href="#调整-bios-设置"><span>调整 BIOS 设置</span></a></h2><p>在执行以下操作时，请将电脑关机，并将启动媒介连接电脑。</p><h3 id="关闭安全引导" tabindex="-1"><a class="header-anchor" href="#关闭安全引导"><span>关闭安全引导</span></a></h3><p>在按下开机键，屏幕出现厂商品牌的时候，按住可以使你进入 BIOS 设置的按键，然后你会进入跟下图相同或类似的界面。</p><div class="hint-container warning"><p class="hint-container-title">厂商差异</p><p>具体情况以厂商主板为准。不同厂商生产的机型进入 BIOS 设置的按键不相同，甚至界面也不会相同。对于某些厂商（比如联想，宏碁），关闭安全启动需要为主板设置管理员密码，建议完成系统安装后立刻移除主板密码，以防止密码被遗忘。</p></div><figure><img src="'+b+`" alt="关闭安全引导" tabindex="0" loading="lazy"><figcaption>关闭安全引导</figcaption></figure><p>请关闭安全引导，NixOS 官方暂时不支持安全引导。这一步没有代价，安装完成后，你随时可以把安全引导再开启。</p><div class="hint-container tip"><p class="hint-container-title">安全引导</p><p>安全引导的技术原理是用数字签名来验证软件是否可信，如果不可信就不让它运行。</p></div><h3 id="调整启动顺序" tabindex="-1"><a class="header-anchor" href="#调整启动顺序"><span>调整启动顺序</span></a></h3><div class="hint-container warning"><p class="hint-container-title">UEFI 支持</p><p>UEFI 和 Legacy 是两种不同的引导方式，安装前请查阅你的主板是否支持 UEFI，或者当前系统是否以 UEFI 方式安装。对于 Windows 系统只需要使用磁盘管理或 DiskGenius 查看是否存在 ESP 分区即可。而对于 Linux，键入：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ls</span> /sys/firmware/efi/efivars
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>若存在输出，就代表支持 UEFI。</p></div><p>默认情况下，BIOS 会从本地硬盘开始查找 EFI（ESP） 分区，然后启动这个分区的启动管理器，所以我们要在 BIOS 设置中找到诸如“启动顺序”选项，将 USB 拉到最高优先级。</p><p>保存后重启，不出意外就到了接下来的环节。</p><h2 id="引导选择" tabindex="-1"><a class="header-anchor" href="#引导选择"><span>引导选择</span></a></h2><p>你会先进入 Ventoy 的引导界面，然后使用上下按键选择你需要引导的镜像，回车确认。下图就是你即将见到的 NixOS 的引导界面：</p><figure><img src="`+h+'" alt="初见引导界面" tabindex="0" loading="lazy"><figcaption>初见引导界面</figcaption></figure><p>正常来说选择第一项正常启动即可。如果你想引导完成后移除启动媒介，可以使用 <code>copytoram</code> 启动项，这样会把系统复制到内存。</p><div class="hint-container warning"><p class="hint-container-title">屏幕工作不正常</p><p>如果在正常的内核引导下，屏幕会有闪烁，撕裂的情况发生，导致安装难以继续。那么请重启后选择 <code>nomodeset</code> 项引导，此项会禁用一些内核针对显卡的功能。</p></div><h2 id="进入-live-cd" tabindex="-1"><a class="header-anchor" href="#进入-live-cd"><span>进入 Live CD</span></a></h2><figure><img src="'+g+`" alt="初遇" tabindex="0" loading="lazy"><figcaption>初遇</figcaption></figure><p>由于我们选择的是最小化镜像，所以是没有桌面环境的，当前在我们面前的是 <code>tty</code> 界面。</p><p>我们现在进入的系统是由镜像直接初始化的，系统并未被安装到硬盘上。我们需要使用现在这个已经被加载的基本系统完成 NixOS 到硬盘的部署。</p><h3 id="网络连接" tabindex="-1"><a class="header-anchor" href="#网络连接"><span>网络连接</span></a></h3><p>如果你有可选的有线连接，请将网线接入到电脑。</p><h4 id="usb-热点" tabindex="-1"><a class="header-anchor" href="#usb-热点"><span>USB 热点</span></a></h4><p>退而求其次，如果你手机数据流量充足，也可以使用 USB 共享网络给主机。</p><h4 id="wifi-连接" tabindex="-1"><a class="header-anchor" href="#wifi-连接"><span>WiFi 连接</span></a></h4><p>NixOS 默认使用 <code>wpa_supplicant</code> 作为无线守护程序。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start wpa_supplicant  <span class="token comment"># 启动服务</span>
<span class="token function">sudo</span> wpa_cli  <span class="token comment"># 进入 wpa 命令行交互模式</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就进入了交互模式，不同区域的 WiFi 网络认证协议也不相同。大多数情况下使用家庭网络的方式即可：</p>`,29)),p(c,{id:"161",data:[{id:"开放网络"},{id:"家庭网络"},{id:"企业网络"}],"tab-id":"shell"},{title0:t(({value:e,isActive:i})=>a[6]||(a[6]=[s("开放网络")])),title1:t(({value:e,isActive:i})=>a[7]||(a[7]=[s("家庭网络")])),title2:t(({value:e,isActive:i})=>a[8]||(a[8]=[s("企业网络")])),tab0:t(({value:e,isActive:i})=>a[9]||(a[9]=[n("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token operator"},">"),s(` add_network
`),n("span",{class:"token number"},"0"),s(`
`),n("span",{class:"token operator"},">"),s(" set_network "),n("span",{class:"token number"},"0"),s(" ssid "),n("span",{class:"token string"},'"WIFI SSID"'),s(`
OK
`),n("span",{class:"token operator"},">"),s(" set_network "),n("span",{class:"token number"},"0"),s(` key_mgmt NONE
OK
`),n("span",{class:"token operator"},">"),s(" enable_network "),n("span",{class:"token number"},"0"),s(`
OK
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:t(({value:e,isActive:i})=>a[10]||(a[10]=[n("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token operator"},">"),s(` add_network
`),n("span",{class:"token number"},"0"),s(`
`),n("span",{class:"token operator"},">"),s(" set_network "),n("span",{class:"token number"},"0"),s(" ssid "),n("span",{class:"token string"},'"你家 WIFI 的 SSID"'),s(`
OK
`),n("span",{class:"token operator"},">"),s(" set_network "),n("span",{class:"token number"},"0"),s(" psk "),n("span",{class:"token string"},'"WIFI 密码"'),s(`
OK
`),n("span",{class:"token operator"},">"),s(" set_network "),n("span",{class:"token number"},"0"),s(` key_mgmt WPA-PSK
OK
`),n("span",{class:"token operator"},">"),s(" enable_network "),n("span",{class:"token number"},"0"),s(`
OK
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab2:t(({value:e,isActive:i})=>a[11]||(a[11]=[n("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token operator"},">"),s(` add_network
`),n("span",{class:"token number"},"0"),s(`
`),n("span",{class:"token operator"},">"),s(" set_network "),n("span",{class:"token number"},"0"),s(" ssid "),n("span",{class:"token string"},'"eduroam"'),s(`
OK
`),n("span",{class:"token operator"},">"),s(" set_network "),n("span",{class:"token number"},"0"),s(" identity "),n("span",{class:"token string"},'"myname@example.com"'),s(`
OK
`),n("span",{class:"token operator"},">"),s(" set_network "),n("span",{class:"token number"},"0"),s(" password "),n("span",{class:"token string"},'"mypassword"'),s(`
OK
`),n("span",{class:"token operator"},">"),s(" set_network "),n("span",{class:"token number"},"0"),s(` key_mgmt WPA-EAP
OK
`),n("span",{class:"token operator"},">"),s(" enable_network "),n("span",{class:"token number"},"0"),s(`
OK
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a[17]||(a[17]=o(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">&lt;</span><span class="token operator"><span class="token file-descriptor important">3</span>&gt;</span>CTRL-EVENT-CONNECTED - Connection to <span class="token number">32</span>:85:ab:ef:24:5c completed <span class="token punctuation">[</span>id<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">id_str</span><span class="token operator">=</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等待出现上面的消息说明你已经连接上了，可以输入 <code>quit</code> 以退出交互模式。</p><h4 id="检测网络" tabindex="-1"><a class="header-anchor" href="#检测网络"><span>检测网络</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ping</span> www.baidu.com <span class="token parameter variable">-c</span> <span class="token number">4</span>  <span class="token comment"># 此项不通优先先检查域名解析服务器</span>
<span class="token function">ping</span> <span class="token number">119.29</span>.29.29 <span class="token parameter variable">-c</span> <span class="token number">4</span>  <span class="token comment"># 腾讯 DNSPod，不通请检查网络连接</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果收到了大多数乃至全部包，说明网络是连通的。</p><h3 id="更换频道" tabindex="-1"><a class="header-anchor" href="#更换频道"><span>更换频道</span></a></h3><p>使用以下命令将两个频道（系统频道和软件仓库频道）替换到镜像源频道：</p><div class="hint-container warning"><p class="hint-container-title">不要盲目复制</p><p>在订阅系统版本时请指定系统版本，一般指定当前的最新稳定版。如果不清楚可以去官网查询或查看你的 Live CD 版本。</p></div>`,8)),n("p",null,[a[13]||(a[13]=s("添加最新(nixos-unstable) channel 的国内镜像，关于 ")),n("a",q,[a[12]||(a[12]=s("nix channel")),p(l)]),a[14]||(a[14]=s("，由于我们没有使用flake，channel将决定安装的系统的软件包版本。"))]),a[18]||(a[18]=o(`<p>以下命令添加 <code>nixos-unstable</code> 作为安装使用的默认channel，如果需要使用稳定版，可替换以下 <code>nixos-unstable</code> 为 <code>nixos-24.11</code> (截至2024年12月的最新发行)。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token parameter variable">-i</span>
nix-channel <span class="token parameter variable">--add</span> https://mirrors.ustc.edu.cn/nix-channels/nixos-unstable nixos
nix-channel <span class="token parameter variable">--update</span>  <span class="token comment"># 更新并解包频道</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="分区与格式化" tabindex="-1"><a class="header-anchor" href="#分区与格式化"><span>分区与格式化</span></a></h3><p>首先，我们使用 <code>lsblk</code> 命令查看一手分区情况：</p><table><thead><tr><th>NAME</th><th>MAJ:MIN</th><th>RM</th><th>SIZE</th><th>RO</th><th>TYPE</th><th>MOUNTPOINTS</th></tr></thead><tbody><tr><td>loop0</td><td>7:0</td><td>0</td><td>799.4M</td><td>1</td><td>loop</td><td><code>/nix/.ro-store</code></td></tr><tr><td>sda</td><td>8:0</td><td>1</td><td>0B</td><td>0</td><td>disk</td><td></td></tr><tr><td>sdb</td><td>8:16</td><td>1</td><td>57.7G</td><td>0</td><td>disk</td><td></td></tr><tr><td>-sdb1</td><td>8:17</td><td>1</td><td>57.6G</td><td>0</td><td>part</td><td></td></tr><tr><td>--ventory</td><td>254:0</td><td>0</td><td>833M</td><td>1</td><td>dm</td><td><code>/iso</code></td></tr><tr><td>-sda2</td><td>8:18</td><td>1</td><td>32M</td><td>0</td><td>part</td><td></td></tr><tr><td>nvme0n1</td><td>259:0</td><td>0</td><td>476.9G</td><td>0</td><td>disk</td><td></td></tr><tr><td>-nvme0n1p1</td><td>259:1</td><td>0</td><td>256M</td><td>0</td><td>part</td><td></td></tr><tr><td>-nvme0n1p2</td><td>259:2</td><td>0</td><td>16M</td><td>0</td><td>part</td><td></td></tr><tr><td>-nvme0n1p3</td><td>259:3</td><td>0</td><td>320G</td><td>0</td><td>part</td><td></td></tr></tbody></table><p><code>TYPE</code> 列指示了分区类型还是硬盘类型。这里需要的是硬盘类型。根据接口类型和硬盘容量大小，你很快就能分辨出我电脑的唯一硬盘是 <code>nvme0n1</code>，<code>sda</code> 是我的引导 U 盘。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">parted</span> <span class="token parameter variable">-a</span> optimal /dev/nvme0n1  <span class="token comment"># 启用对齐，并进行分区</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们已经进入了交互模式。在这个模式中，所有操作都是即时生效的，所以请再三确认你的操作。你可以输入 <code>help</code> 查看帮助手册，然后输入 <code>p</code> 查看当前分区状况。</p><table><thead><tr><th>Number</th><th>Start</th><th>End</th><th>Size</th><th>File system</th><th>Name</th><th>Flags</th></tr></thead><tbody><tr><td>1</td><td>20.5KB</td><td>268MB</td><td>268MB</td><td>fat32</td><td>EFI system partition</td><td>boot, esp, no_automount</td></tr><tr><td>2</td><td>268MB</td><td>285MB</td><td>16.8MB</td><td></td><td>Microsoft reserved partition</td><td>msftres, no_automount</td></tr><tr><td>3</td><td>286MB</td><td>344GB</td><td>344GB</td><td>ntfs</td><td>Basic data partition</td><td>msftdata</td></tr></tbody></table><p>在现有的 GPT 分区表上，我们添加额外的分区。首先我们需要一个 NixOS 的主分区，用来容纳 NixOS 的根文件系统。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mkpart primary 344GB <span class="token parameter variable">-16GiB</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后添加一个 SWAP 分区，它可以拓展你的内存能力以及将内存数据休眠于此。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mkpart primary linux-swap <span class="token parameter variable">-16GiB</span> <span class="token number">100</span>%
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">分区对齐</p><p>不出意外的话，会出现一个警告：</p><p><strong>Warnning: The resulting partition is not properly aligned for best performance: 966660784s % 2048s != 0s Ignore/Cancel?</strong></p><p><mark>我在这里输入了 Ignore，忽略这个警告。</mark></p><p>在我的设备上，现有的 GPT 分区表是由 Disk Genius 生成的，出现这个警告我并不意外，我选择忽略这个警告。这个警告提示你分区没有对齐，对齐以后才能获得最佳性能。如果你想让分区重新对齐，就只能重新创建 GPT 表，再重新安装两个系统。</p><p>如果你想让你的分区对齐，可以在创建第一张分区表时使用百分比表示分区的开始和结束位置：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mkpart primary <span class="token number">0</span>% <span class="token number">100</span>%
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者在开始的时候就使用对齐参数：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">parted</span> <span class="token parameter variable">-a</span> optimal /dev/nvme0n1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>你还可以使用下面的命令检查分区是否对齐，最后一个数字是分区序号：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>align-check optimal <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><p>现在的分区表应当是：</p><table><thead><tr><th>Number</th><th>Start</th><th>End</th><th>Size</th><th>File system</th><th>Name</th><th>Flags</th></tr></thead><tbody><tr><td>1</td><td>20.5KB</td><td>268MB</td><td>268MB</td><td>fat32</td><td>EFI system partition</td><td>boot, esp, no_automount</td></tr><tr><td>2</td><td>268MB</td><td>285MB</td><td>16.8MB</td><td></td><td>Microsoft reserved partition</td><td>msftres, no_automount</td></tr><tr><td>3</td><td>286MB</td><td>344GB</td><td>344GB</td><td>ntfs</td><td>Basic data partition</td><td>msftdata</td></tr><tr><td>4</td><td>344GB</td><td>495GB</td><td>151GB</td><td></td><td>primary</td><td></td></tr><tr><td>5</td><td>495GB</td><td>512GB</td><td>17.2GB</td><td>linux-swap(v1)</td><td>primary</td><td>swap</td></tr></tbody></table><p>然后输入 <code>quit</code> 退出交互模式。</p><p>接下来进行格式化环节。格式化根目录：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mkfs.btrfs <span class="token parameter variable">-L</span> nixos /dev/nvme0n1p4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>再格式化交换分区：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkswap</span> <span class="token parameter variable">-L</span> swap /dev/nvme0n1p5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后挂载根分区到当前的 <code>/mnt</code> 目录下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mount</span> /dev/nvme0n1p4 /mnt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建几个子卷，我们今后可以对子卷进行更细粒化的管理：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>btrfs subvolume create /mnt/root
btrfs subvolume create /mnt/home
btrfs subvolume create /mnt/nix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>取消挂载根目录，因为我们要重新挂载子卷：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">umount</span> /mnt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>挂载子卷时启用透明压缩：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mount</span> <span class="token parameter variable">-o</span> <span class="token assign-left variable">compress</span><span class="token operator">=</span>zstd,subvol<span class="token operator">=</span>root /dev/nvme0n1p4 /mnt
<span class="token function">mkdir</span> /mnt/<span class="token punctuation">{</span>home,nix,boot<span class="token punctuation">}</span>
<span class="token function">mount</span> <span class="token parameter variable">-o</span> <span class="token assign-left variable">compress</span><span class="token operator">=</span>zstd,subvol<span class="token operator">=</span>home /dev/nvme0n1p4 /mnt/home
<span class="token function">mount</span> <span class="token parameter variable">-o</span> <span class="token assign-left variable">compress</span><span class="token operator">=</span>zstd,noatime,subvol<span class="token operator">=</span>nix /dev/nvme0n1p4 /mnt/nix
<span class="token function">mount</span> /dev/nvme0n1p1 /mnt/boot
<span class="token function">swapon</span> /dev/nvme0n1p5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编辑系统配置" tabindex="-1"><a class="header-anchor" href="#编辑系统配置"><span>编辑系统配置</span></a></h3><p>我们使用以下命令生成基础配置：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nixos-generate-config <span class="token parameter variable">--root</span> /mnt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后编辑配置：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">vim</span> /mnt/etc/nixos/configuration.nix
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>因为是基本的安装，我并没有为配置加太多花，==不要改动你配置中的最后一行的版本号 ==：</p><div class="language-nix line-numbers-mode" data-ext="nix" data-title="nix"><pre class="language-nix"><code><span class="token punctuation">{</span> config<span class="token punctuation">,</span> lib<span class="token punctuation">,</span> pkgs<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token punctuation">:</span>
<span class="token punctuation">{</span>
    imports <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token url">./hardware-configuration.nix</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
    boot<span class="token punctuation">.</span>loader <span class="token operator">=</span> <span class="token punctuation">{</span>
        grub <span class="token operator">=</span> <span class="token punctuation">{</span>
            enable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            device <span class="token operator">=</span> <span class="token string">&quot;nodev&quot;</span><span class="token punctuation">;</span>
            efiSupport <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            extraEntries <span class="token operator">=</span> <span class="token string">&#39;&#39;
                menuentry &quot;Windows&quot; {
                    search --file --no-floppy --set=root /EFI/Microsoft/Boot/bootmgfw.efi
                    chainloader (&#39;&#39;\${root})/EFI/Microsoft/Boot/bootmgfw.efi
                }
            &#39;&#39;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        efi <span class="token operator">=</span> <span class="token punctuation">{</span>
            canTouchEfiVariables <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            efiSysMountPoint <span class="token operator">=</span> <span class="token string">&quot;/boot&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    networking <span class="token operator">=</span> <span class="token punctuation">{</span>
        hostName <span class="token operator">=</span> <span class="token string">&quot;nixos&quot;</span><span class="token punctuation">;</span>
        networkmanager<span class="token punctuation">.</span>enable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    time<span class="token punctuation">.</span>timeZone <span class="token operator">=</span> <span class="token string">&quot;Asia/Shanghai&quot;</span><span class="token punctuation">;</span>
    i18n<span class="token punctuation">.</span>defaultLocale <span class="token operator">=</span> <span class="token string">&quot;en_US.UTF-8&quot;</span><span class="token punctuation">;</span>
    services<span class="token punctuation">.</span>xserver <span class="token operator">=</span> <span class="token punctuation">{</span>
        enable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        displayManager<span class="token punctuation">.</span>sddm<span class="token punctuation">.</span>enable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        desktopManager<span class="token punctuation">.</span>plasma5<span class="token punctuation">.</span>enable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    environment<span class="token punctuation">.</span>systemPackages <span class="token operator">=</span> <span class="token keyword">with</span> pkgs<span class="token punctuation">;</span> <span class="token punctuation">[</span>
        vim alacritty
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    sound<span class="token punctuation">.</span>enable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    hardware<span class="token punctuation">.</span>pulseaudio<span class="token punctuation">.</span>enable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    nix<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>substituters <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">&quot;https://mirror.sjtu.edu.cn/nix-channels/store&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
    system<span class="token punctuation">.</span>stateVersion <span class="token operator">=</span> <span class="token string">&quot;23.11&quot;</span><span class="token punctuation">;</span>  <span class="token comment"># 不要改动</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于 <code>hardware-configuration.nix</code> 不需要太多改动。<mark>每个机器有不同的特征，不要直接复制</mark>：</p><div class="language-nix line-numbers-mode" data-ext="nix" data-title="nix"><pre class="language-nix"><code><span class="token punctuation">{</span> config<span class="token punctuation">,</span> lib<span class="token punctuation">,</span> pkgs<span class="token punctuation">,</span> modulesPath<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token punctuation">:</span>
<span class="token punctuation">{</span>
    imports <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">(</span>modulesPath <span class="token operator">+</span> <span class="token string">&quot;/installer/scan/not-detected.nix&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
    boot <span class="token operator">=</span> <span class="token punctuation">{</span>
        initrd <span class="token operator">=</span> <span class="token punctuation">{</span>
            availablekernelModules <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">&quot;xhci_pci&quot;</span> <span class="token string">&quot;thunderbolt&quot;</span> <span class="token string">&quot;nvme&quot;</span> <span class="token string">&quot;usbhid&quot;</span> <span class="token string">&quot;usb_storage&quot;</span> <span class="token string">&quot;sd_mod&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
            kernelModules <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        kernelPackages <span class="token operator">=</span> pkgs<span class="token punctuation">.</span>linuxPackages_latest<span class="token punctuation">;</span>
        kernelModules <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">&quot;kvm-intel&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
        kernelParams <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">&quot;i915.enable_psr=0&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
        extraModulesPackages <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
        fileSystem <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;/&quot;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
                device <span class="token operator">=</span> <span class="token string">&quot;/dev/disk/bu-uuid/a3c4d78a-4e74-4c0a-9ecc-680d5f69f042&quot;</span><span class="token punctuation">;</span>
                fsType <span class="token operator">=</span> <span class="token string">&quot;btrfs&quot;</span><span class="token punctuation">;</span>
                options <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">&quot;subvol=root&quot;</span> <span class="token string">&quot;compress=zstd&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token string">&quot;/home&quot;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
                device <span class="token operator">=</span> <span class="token string">&quot;/dev/disk/bu-uuid/a3c4d78a-4e74-4c0a-9ecc-680d5f69f042&quot;</span><span class="token punctuation">;</span>
                fsType <span class="token operator">=</span> <span class="token string">&quot;btrfs&quot;</span><span class="token punctuation">;</span>
                options <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">&quot;subvol=home&quot;</span> <span class="token string">&quot;compress=zstd&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token string">&quot;/nix&quot;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
                device <span class="token operator">=</span> <span class="token string">&quot;/dev/disk/bu-uuid/a3c4d78a-4e74-4c0a-9ecc-680d5f69f042&quot;</span><span class="token punctuation">;</span>
                fsType <span class="token operator">=</span> <span class="token string">&quot;btrfs&quot;</span><span class="token punctuation">;</span>
                options <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">&quot;subvol=nix&quot;</span> <span class="token string">&quot;noatime&quot;</span> <span class="token string">&quot;compress=zstd&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token string">&quot;/boot&quot;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
                device <span class="token operator">=</span> <span class="token string">&quot;/dev/disk/by-uuid/9DCC-7A56&quot;</span><span class="token punctuation">;</span>
                fsType <span class="token operator">=</span> <span class="token string">&quot;vfat&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    swapDevices <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            device <span class="token operator">=</span> <span class="token string">&quot;/dev/disk/by-uuid/ad463837-1b84-45f5-8ca9-42ee8f05377d&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    networking<span class="token punctuation">.</span>useDHCP <span class="token operator">=</span> lib<span class="token punctuation">.</span>mkDefault <span class="token boolean">true</span><span class="token punctuation">;</span>
    nixpkgs<span class="token punctuation">.</span>hostPlatform <span class="token operator">=</span> lib<span class="token punctuation">.</span>mkDefault <span class="token string">&quot;x86_64-linux&quot;</span><span class="token punctuation">;</span>
    powerManagement<span class="token punctuation">.</span>cpuFreqGovernor <span class="token operator">=</span> lib<span class="token punctuation">.</span>mkDefault <span class="token string">&quot;powersave&quot;</span><span class="token punctuation">;</span>
    hardware<span class="token punctuation">.</span>cpu<span class="token punctuation">.</span>intel<span class="token punctuation">.</span>updateMicrocode <span class="token operator">=</span> lib<span class="token punctuation">.</span>mkDefault config<span class="token punctuation">.</span>hardware<span class="token punctuation">.</span>enableRedistributableFirmware<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你只需要修改各个子卷的挂载参数（添加 <code>&quot;compress=zstd&quot;</code> 和 <code>&quot;noatime&quot;</code>），还有启用最新的内核就好。需要注意的是上面的内核启动参数，对于我的机型，没有 <code>i915.enable_psr=0</code> 屏幕显示就会闪烁撕裂，对于其他机型（比如联想 Yoga 14s），键盘会无法工作，这个时候就需要添加 <code>i8042.dumbkbd</code> 启动参数。其他机型遇到的各种问题请通过本页面底部的链接联系 NixOS-CN 社区以寻求支持。</p><h3 id="部署系统" tabindex="-1"><a class="header-anchor" href="#部署系统"><span>部署系统</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> nixos-install <span class="token parameter variable">--option</span> extra-substituters <span class="token string">&quot;https://mirror.sjtu.edu.cn/nix-channels/store&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>添加用户，tritium 是我的用户名，记得改成你自己的：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nixos-enter  <span class="token comment"># 进入部署好的系统，类似 arch 的 chroot</span>
<span class="token function">passwd</span> root  <span class="token comment"># 重置 root 密码</span>
<span class="token function">useradd</span> <span class="token parameter variable">-m</span> <span class="token parameter variable">-G</span> wheel tritium  <span class="token comment"># 添加普通用户，并加入 wheel 组</span>
<span class="token function">passwd</span> tritium  <span class="token comment"># 设置普通账户密码</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后关机，不出意外的话还是需要你去 BIOS 调整一下启动项，推荐把 NixOS 的启动项拉到最前面，因为在 GRUB 的界面你能选择引导至 NixOS 还是 Windows。当然有的机型可以在出现厂商 Logo 时直接按 F10（或其他按钮）来选择启动项。</p><p>最终退后三步朝电脑跪拜祈求它能正常开机，至此基本安装教程完毕。</p>`,45))])}const N=r(f,[["render",y],["__file","DualBoot.html.vue"]]),M=JSON.parse('{"path":"/tutorials/installation/DualBoot.html","title":"双系统安装","lang":"zh-CN","frontmatter":{"description":"双系统安装 Windows 系统上的准备 本章将介绍如何在已经安装了 Windows 系统的物理机上再安装 NixOS 。 关闭快速启动 若不关闭 Windows 的快速启动，可能会导致 NixOS 掉网卡。点击 “更改当前不可用配置” 以后会出现一个 UAC 窗口，点击允许以后，再取消 “启用快速启动（推荐）” 复选框。 关闭快速启动关闭快速启动 调...","head":[["meta",{"property":"og:url","content":"https://nixos-cn.github.io/tutorials/installation/DualBoot.html"}],["meta",{"property":"og:site_name","content":"NixOS 中文"}],["meta",{"property":"og:title","content":"双系统安装"}],["meta",{"property":"og:description","content":"双系统安装 Windows 系统上的准备 本章将介绍如何在已经安装了 Windows 系统的物理机上再安装 NixOS 。 关闭快速启动 若不关闭 Windows 的快速启动，可能会导致 NixOS 掉网卡。点击 “更改当前不可用配置” 以后会出现一个 UAC 窗口，点击允许以后，再取消 “启用快速启动（推荐）” 复选框。 关闭快速启动关闭快速启动 调..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://nixos-cn.github.io/images/GreenHand/TurnOffWindowsFastboot.webp"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-14T07:10:29.000Z"}],["meta",{"property":"article:author","content":"NixOS-CN"}],["meta",{"property":"article:modified_time","content":"2024-12-14T07:10:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"双系统安装\\",\\"image\\":[\\"https://nixos-cn.github.io/images/GreenHand/TurnOffWindowsFastboot.webp\\",\\"https://nixos-cn.github.io/images/GreenHand/WindowsDiskManager.webp\\",\\"https://nixos-cn.github.io/images/GreenHand/DisableSecureBoot.webp\\",\\"https://nixos-cn.github.io/images/GreenHand/FirstBoot.webp\\",\\"https://nixos-cn.github.io/images/GreenHand/TrulyMeet.webp\\"],\\"dateModified\\":\\"2024-12-14T07:10:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"NixOS-CN\\",\\"url\\":\\"https://github.com/nixos-cn\\"}]}"]]},"headers":[{"level":2,"title":"Windows 系统上的准备","slug":"windows-系统上的准备","link":"#windows-系统上的准备","children":[{"level":3,"title":"关闭快速启动","slug":"关闭快速启动","link":"#关闭快速启动","children":[]},{"level":3,"title":"调整时间设置","slug":"调整时间设置","link":"#调整时间设置","children":[]},{"level":3,"title":"腾出空间","slug":"腾出空间","link":"#腾出空间","children":[]},{"level":3,"title":"制作引导媒介","slug":"制作引导媒介","link":"#制作引导媒介","children":[]}]},{"level":2,"title":"调整 BIOS 设置","slug":"调整-bios-设置","link":"#调整-bios-设置","children":[{"level":3,"title":"关闭安全引导","slug":"关闭安全引导","link":"#关闭安全引导","children":[]},{"level":3,"title":"调整启动顺序","slug":"调整启动顺序","link":"#调整启动顺序","children":[]}]},{"level":2,"title":"引导选择","slug":"引导选择","link":"#引导选择","children":[]},{"level":2,"title":"进入 Live CD","slug":"进入-live-cd","link":"#进入-live-cd","children":[{"level":3,"title":"网络连接","slug":"网络连接","link":"#网络连接","children":[]},{"level":3,"title":"更换频道","slug":"更换频道","link":"#更换频道","children":[]},{"level":3,"title":"分区与格式化","slug":"分区与格式化","link":"#分区与格式化","children":[]},{"level":3,"title":"编辑系统配置","slug":"编辑系统配置","link":"#编辑系统配置","children":[]},{"level":3,"title":"部署系统","slug":"部署系统","link":"#部署系统","children":[]}]}],"git":{"createdTime":1734158024000,"updatedTime":1734160229000,"contributors":[{"name":"oluceps","email":"secinia@outlook.com","commits":2}]},"readingTime":{"minutes":10.57,"words":3170},"filePathRelative":"tutorials/installation/DualBoot.md","localizedDate":"2024年12月14日","autoDesc":true,"excerpt":"\\n<h2>Windows 系统上的准备</h2>\\n<p>本章将介绍如何在已经安装了 Windows 系统的物理机上再安装 NixOS 。</p>\\n<h3>关闭快速启动</h3>\\n<p>若不关闭 Windows 的快速启动，可能会导致 NixOS 掉网卡。点击 “更改当前不可用配置”\\n以后会出现一个 UAC 窗口，点击允许以后，再取消 “启用快速启动（推荐）” 复选框。</p>\\n<figure><img src=\\"/images/GreenHand/TurnOffWindowsFastboot.webp\\" alt=\\"关闭快速启动\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>关闭快速启动</figcaption></figure>"}');export{N as comp,M as data};
